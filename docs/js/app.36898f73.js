(function(e){function t(t){for(var n,s,a=t[0],c=t[1],l=t[2],h=0,g=[];h<a.length;h++)s=a[h],Object.prototype.hasOwnProperty.call(r,s)&&r[s]&&g.push(r[s][0]),r[s]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);d&&d(t);while(g.length)g.shift()();return o.push.apply(o,l||[]),i()}function i(){for(var e,t=0;t<o.length;t++){for(var i=o[t],n=!0,s=1;s<i.length;s++){var c=i[s];0!==r[c]&&(n=!1)}n&&(o.splice(t--,1),e=a(a.s=i[0]))}return e}var n={},r={app:0},o=[];function s(e){return a.p+"js/"+({about:"about"}[e]||e)+"."+{about:"f7b116dc"}[e]+".js"}function a(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.e=function(e){var t=[],i=r[e];if(0!==i)if(i)t.push(i[2]);else{var n=new Promise((function(t,n){i=r[e]=[t,n]}));t.push(i[2]=n);var o,c=document.createElement("script");c.charset="utf-8",c.timeout=120,a.nc&&c.setAttribute("nonce",a.nc),c.src=s(e);var l=new Error;o=function(t){c.onerror=c.onload=null,clearTimeout(h);var i=r[e];if(0!==i){if(i){var n=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+n+": "+o+")",l.name="ChunkLoadError",l.type=n,l.request=o,i[1](l)}r[e]=void 0}};var h=setTimeout((function(){o({type:"timeout",target:c})}),12e4);c.onerror=c.onload=o,document.head.appendChild(c)}return Promise.all(t)},a.m=e,a.c=n,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(i,n,function(t){return e[t]}.bind(null,n));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/infogr-raytracer-webgl/",a.oe=function(e){throw console.error(e),e};var c=window["webpackJsonp"]=window["webpackJsonp"]||[],l=c.push.bind(c);c.push=t,c=c.slice();for(var h=0;h<c.length;h++)t(c[h]);var d=l;o.push([0,"chunk-vendors"]),i()})({0:function(e,t,i){e.exports=i("56d7")},"21bb":function(e,t,i){"use strict";var n=i("2dad"),r=i.n(n);r.a},"2dad":function(e,t,i){},"56d7":function(e,t,i){"use strict";i.r(t);i("e260"),i("e6cf"),i("cca6"),i("a79d");var n=i("2b0e"),r=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{attrs:{id:"app"}},[i("router-view")],1)},o=[],s=(i("5c0b"),i("2877")),a={},c=Object(s["a"])(a,r,o,!1,null,null,null),l=c.exports,h=i("9483");Object(h["a"])("".concat("/infogr-raytracer-webgl/","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(e){console.error("Error during service worker registration:",e)}});i("d3b7");var d=i("5530"),g=i("8c4f"),u=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"home"},[i("h1",[e._v("INFOGR Raytracer WebGL")]),e._m(0),i("div",{staticClass:"tablink-container"},e._l(e.movies,(function(t,n){return i("router-link",{key:t.id,staticClass:"tablink",attrs:{to:{name:"Movie",params:{id:n}}}},[e._v(e._s(t.id))])})),1),i("canvas",{attrs:{id:"glCanvas",width:"800",height:"800"}}),e._m(1)])},f=[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("h2",[i("a",{attrs:{href:"https://github.com/cor"}},[e._v("cor")]),e._v(" & "),i("a",{attrs:{href:"https://github.com/kaiserkarel"}},[e._v("kaiserkarel")])])},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"description"},[i("p",[e._v(" Above you will find two movies; which are actively ray traced withn a WebGL fragment shader. The tracer operates in two dimensions, shooting a ray at each pixel every single frame. WebGL is easily capable of performing this operation at 60FPS, as opposed to traditional CPU implementations. Our CPU-based "),i("a",{attrs:{href:"https://github.com/cor/infogr-raytracer"}},[e._v("C# version")]),e._v(", from which we originally ported the core logic, runs at a mere 5FPS. We've ported that shader to OpenGL, which supports a more modern shading language, in order to hit 60FPS. ")]),i("p",[e._v(" We wanted to run this project on the web, which is why we ported it to WebGL. However, due to WebGL's limited support for shaders, we wrote our own shader preprocessor in order to add variable-sized arrays to GLSL 1.0 ")]),i("p",[e._v(" The movie consists of a set of static scenes, which are interpolated to generate fluid motion. ")])])}],p=(i("a9e3"),i("cfc3"),i("9a8c"),i("a975"),i("735e"),i("c1ac"),i("d139"),i("3a7b"),i("d5d6"),i("82f8"),i("e91f"),i("60bd"),i("5f96"),i("3280"),i("3fcc"),i("ca91"),i("25a1"),i("cd26"),i("3c5d"),i("2954"),i("649e"),i("219c"),i("170b"),i("b39a"),i("72f7"),i("ddb0"),i("3835")),v=i("b85c"),m=i("d4ec"),y=i("bee2"),S=i("ade3"),b=i("20e7"),w=(i("ac1f"),i("5319"),function(){function e(t,i,n,r){Object(m["a"])(this,e),Object(S["a"])(this,"gl",void 0),Object(S["a"])(this,"program",void 0),this.gl=t,i=this.preprocessSource(i,r),n=this.preprocessSource(n,r),this.program=this.initShaderProgram(t,i,n)}return Object(y["a"])(e,[{key:"initShaderProgram",value:function(e,t,i){var n=this.loadShader(e,e.VERTEX_SHADER,t),r=this.loadShader(e,e.FRAGMENT_SHADER,i),o=e.createProgram();return e.attachShader(o,n),e.attachShader(o,r),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS)?o:(alert("Unable to initialize the shader program: ".concat(e.getProgramInfoLog(o))),null)}},{key:"preprocessSource",value:function(e,t){var i=/42\/\/\$(.*)\$\/\//g;return e.replace(i,(function(e,i){return t[i]}))}},{key:"loadShader",value:function(e,t,i){var n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)?n:(console.error("An error occurred compiling the shaders:\n".concat(e.getShaderInfoLog(n))),e.deleteShader(n),null)}},{key:"use",value:function(){this.gl.useProgram(this.program)}},{key:"setUniform1f",value:function(e,t){this.gl.uniform1f(this.getUniformLocation(e),t)}},{key:"setUniformMatrix4fv",value:function(e,t){this.gl.uniformMatrix4fv(this.getUniformLocation(e),!1,t)}},{key:"setUniform2fv",value:function(e,t){this.gl.uniform2fv(this.getUniformLocation(e),t)}},{key:"setUniform3fv",value:function(e,t){this.gl.uniform3fv(this.getUniformLocation(e),t)}},{key:"getUniformLocation",value:function(e){return this.gl.getUniformLocation(this.program,e)}},{key:"getAttribLocation",value:function(e){return this.gl.getAttribLocation(this.program,e)}},{key:"delete",value:function(){this.gl.deleteProgram(this.program)}}]),e}()),O="precision highp float;\n\n#define M_PI 3.1415926535897932384626433832795\n\nvarying mediump vec2 screenPosition;\n\nstruct Camera\n{\n    vec2 position;\n    float zoom;\n} camera = Camera (vec2(0.0, 0.0), 0.5);\n\nstruct Ray\n{\n    vec2 origin;\n    vec2 direction;\n    float magnitude;\n};\n\nstruct Light\n{\n    vec2 position;\n    vec3 color;\n};\n\nstruct Circle\n{\n    vec2 position;\n    float radius;\n};\n\n#define LIGHT_COUNT 42//$LIGHT_COUNT$//\nuniform Light lights[LIGHT_COUNT];\n\n#define CIRCLE_COUNT 42//$CIRCLE_COUNT$//\nuniform Circle circles[CIRCLE_COUNT];\n\n\n// INTERSECTION CHECKS\nbool circleIntersects(Circle circle, Ray ray)\n{\n    vec2 posToOrigin = ray.origin - circle.position;\n    float a = dot(ray.direction, ray.direction);\n    float b = dot(ray.direction, posToOrigin);\n    float c = dot(posToOrigin, posToOrigin) - (circle.radius * circle.radius);\n    float d = (b * b) - (a * c);\n\n    if (d < 0.0) return false;\n\n    float sqrtD = sqrt(d);\n    float distance = (-b - sqrtD) / a;\n    if (distance < 0.0) distance = (-b + sqrtD) / a;\n\n    return distance > 0.0 && distance < ray.magnitude;\n}\n\nstruct Rectangle {\n    vec2 lu;\n    vec2 ru;\n    vec2 rl;\n    vec2 ll;\n};\n\nRectangle newRectangle(in vec2 position, float width, float height, float angle) {\n    vec2 corners[4];\n    corners[0] = vec2(-width * 0.5, height * 0.5); //lu\n    corners[1] = vec2(width * 0.5, height * 0.5);  // ru\n    corners[2] = vec2(width * 0.5, -height * 0.5); // rl\n    corners[3] = vec2(-width * 0.5, -height * 0.5); // ll\n\n    if (angle != 0.0) {\n        for (int i = 0; i < 4; i++) {\n            vec2 corner = corners[i];\n            corners[i] = vec2(\n            corner.x * cos(angle) - corner.y * sin(angle),\n            corner.xy * sin(angle) + corner.y * cos(angle)\n            );\n        }\n    }\n\n    for (int i = 0; i < 4; i++) {\n        corners[i] += position;\n    }\n\n    return Rectangle(corners[0], corners[1], corners[2], corners[3]);\n}\n\nstruct RawRect {\n    vec2 position;\n    float width;\n    float height;\n    float angle;\n};\n\n#define RECTANGLE_COUNT 42//$RECTANGLE_COUNT$//\nuniform RawRect rectangles[RECTANGLE_COUNT];\nRectangle rects[RECTANGLE_COUNT];\nbool lineIntersects(Ray ray, vec2 lineStart, vec2 lineEnd) {\n    vec2 rayStart = ray.origin;\n    vec2 rayEnd = ray.origin + ray.direction;\n\n    vec2 rayStoLineS = lineStart - rayStart;\n    vec2 r = ray.direction * ray.magnitude;\n    vec2 s = lineEnd - lineStart;\n\n    float crossR = (rayStoLineS.x * r.y) - (rayStoLineS.y * r.x);\n    float crossS = (rayStoLineS.x * s.y) - (rayStoLineS.y * s.x);\n    float rCrossS = r.x * s.y - r.y * s.x;\n\n    if (crossR == 0.0) {\n        return ((lineStart.x - rayStart.x < 0.0) != (lineStart.x - rayEnd.x < 0.0)) ||\n        ((lineStart.y - rayStart.y < 0.0) != (lineStart.y - rayEnd.y < 0.0));\n    }\n\n    if (rCrossS == 0.0) return false;\n\n    float t = crossS / rCrossS;\n    float u = crossR / rCrossS;\n\n    return (t >= 0.0) && (t <= 1.0) && (u >= 0.0) && (u <= 1.0);\n}\n\nbool rectangleIntersect(Ray ray, Rectangle rect) {\n    return lineIntersects(ray, rect.ll, rect.lu) ||\n    lineIntersects(ray, rect.lu, rect.ru) ||\n    lineIntersects(ray, rect.ru, rect.rl) ||\n    lineIntersects(ray, rect.rl, rect.ll);\n}\n\nvec2 ToWorldSpace(vec2 screenSpacePoint)\n{\n    return (screenSpacePoint + camera.position) / camera.zoom;\n}\n\nvec3 Trace(vec2 worldPoint)\n{\n    vec3 colorAtPixel = vec3(0.0, 0.0, 0.0);\n\n    // Cache the rectangle transformations.\n    Rectangle rects[RECTANGLE_COUNT];\n    for (int i = 0; i < RECTANGLE_COUNT; i++) {\n        RawRect raw = rectangles[i];\n        rects[i] = newRectangle(raw.position, raw.width, raw.height, raw.angle);\n    }\n\n    for (int i = 0; i < LIGHT_COUNT; i++) {\n\n        vec2 vectorToLight = lights[i].position - worldPoint;\n\n        // Don't forget to normalize the ray's direction\n        Ray ray = Ray(worldPoint, vectorToLight, length(vectorToLight));\n        ray.direction = normalize(ray.direction);\n\n        // Check for occlusions between ray\n        bool occluded = false;\n        for (int c = 0; c < CIRCLE_COUNT; c++) {\n            Circle circle = circles[c];\n            if (circleIntersects(circle, ray)) {\n                occluded = true;\n                break;\n            }\n        }\n        if (occluded) continue;\n\n        for (int r = 0; r < RECTANGLE_COUNT; r++) {\n            Rectangle rect = rects[r];\n            if (rectangleIntersect(ray, rect)) {\n                occluded = true;\n                break;\n            }\n        }\n        if (occluded) continue;\n\n\n        float distanceToLight = length(vectorToLight);\n        float intensity = 1.0 / (4.0 * M_PI * distanceToLight);\n\n        colorAtPixel += lights[i].color * intensity;\n    }\n\n\n    return colorAtPixel;\n}\n\n\nvoid main() {\n    gl_FragColor = vec4(Trace(ToWorldSpace(screenPosition)), 1.0);\n}\n",T="precision highp float;\n\nattribute vec4 aVertexPosition;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying mediump vec2 screenPosition;\n\nvoid main() {\n    screenPosition = aVertexPosition.xy;\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n}\n",C=function(){function e(t,i){Object(m["a"])(this,e),Object(S["a"])(this,"gl",void 0),Object(S["a"])(this,"shader",void 0),Object(S["a"])(this,"buffers",void 0),this.gl=t,this.shader=new w(t,T,O,i),this.buffers=this.initBuffers()}return Object(y["a"])(e,[{key:"recompileShader",value:function(e){this.shader.delete(),this.shader=new w(this.gl,T,O,e)}},{key:"initBuffers",value:function(){var e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e);var t=[-1,1,1,1,-1,-1,1,-1];return this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW),{position:e}}},{key:"drawScene",value:function(e){this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.clearDepth(1),this.gl.enable(this.gl.DEPTH_TEST),this.gl.depthFunc(this.gl.LEQUAL),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);var t=43.5*Math.PI/180,i=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,n=.1,r=100,o=b["a"].create();b["a"].perspective(o,t,i,n,r);var s=b["a"].create();b["a"].translate(s,s,[0,0,-2.5]);var a=this.shader.getAttribLocation("aVertexPosition");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffers.position),this.gl.vertexAttribPointer(a,2,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(a),this.shader.use(),this.setLightUniforms(e),this.setCircleUniforms(e),this.setRectUniforms(e),this.shader.setUniformMatrix4fv("uProjectionMatrix",o),this.shader.setUniformMatrix4fv("uModelViewMatrix",s);var c=0,l=4;this.gl.drawArrays(this.gl.TRIANGLE_STRIP,c,l)}},{key:"setLightUniforms",value:function(e){var t,i=Object(v["a"])(e.lights.entries());try{for(i.s();!(t=i.n()).done;){var n=Object(p["a"])(t.value,2),r=n[0],o=n[1];this.shader.setUniform2fv("lights[".concat(r,"].position"),new Float32Array(o.position)),this.shader.setUniform3fv("lights[".concat(r,"].color"),new Float32Array(o.color))}}catch(s){i.e(s)}finally{i.f()}}},{key:"setCircleUniforms",value:function(e){var t,i=Object(v["a"])(e.circles.entries());try{for(i.s();!(t=i.n()).done;){var n=Object(p["a"])(t.value,2),r=n[0],o=n[1];this.shader.setUniform2fv("circles[".concat(r,"].position"),new Float32Array(o.position)),this.shader.setUniform1f("circles[".concat(r,"].radius"),o.radius)}}catch(s){i.e(s)}finally{i.f()}}},{key:"setRectUniforms",value:function(e){var t,i=Object(v["a"])(e.rectangles.entries());try{for(i.s();!(t=i.n()).done;){var n=Object(p["a"])(t.value,2),r=n[0],o=n[1];this.shader.setUniform2fv("rectangles[".concat(r,"].position"),new Float32Array(o.position)),this.shader.setUniform1f("rectangles[".concat(r,"].width"),o.width),this.shader.setUniform1f("rectangles[".concat(r,"].height"),o.height),this.shader.setUniform1f("rectangles[".concat(r,"].angle"),o.angle)}}catch(s){i.e(s)}finally{i.f()}}}]),e}(),R=C;i("d81d"),i("13d5"),i("4160"),i("159b"),i("3410");function _(e){return Object.assign(Object.create(Object.getPrototypeOf(e)),JSON.parse(JSON.stringify(e)))}var L=function(){function e(){Object(m["a"])(this,e),Object(S["a"])(this,"lights",[{position:[1,1],color:[1,1,1]}]),Object(S["a"])(this,"circles",[{position:[0,0],radius:.1}]),Object(S["a"])(this,"rectangles",[{position:[0,0],width:.1,height:.1,angle:0}]),Object(S["a"])(this,"duration",1)}return Object(y["a"])(e,[{key:"clone",value:function(){return _(this)}},{key:"interpolate",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=this.clone();return i||(t=(Math.sin((t-.5)*Math.PI)+1)/2),this.lights.forEach((function(i,r){for(var o in n.lights[r].position)n.lights[r].position[o]=i.position[o]+t*(e.lights[r].position[o]-i.position[o]);for(var s in n.lights[r].color)n.lights[r].color[s]=i.color[s]+t*(e.lights[r].color[s]-i.color[s])})),this.circles.forEach((function(i,r){for(var o in n.circles[r].position)n.circles[r].position[o]=i.position[o]+t*(e.circles[r].position[o]-i.position[o]);n.circles[r].radius=i.radius+t*(e.circles[r].radius-i.radius)})),this.rectangles.forEach((function(i,r){for(var o in n.rectangles[r].position)n.rectangles[r].position[o]=i.position[o]+t*(e.rectangles[r].position[o]-i.position[o]);n.rectangles[r].width=i.width+t*(e.rectangles[r].width-i.width),n.rectangles[r].height=i.height+t*(e.rectangles[r].height-i.height),n.rectangles[r].angle=i.angle+t*(e.rectangles[r].angle-i.angle)})),n}},{key:"addLight",value:function(){this.lights.push(_(this.lights[this.lights.length-1]))}},{key:"addCircle",value:function(){this.circles.push(_(this.circles[this.circles.length-1]))}},{key:"addRectangle",value:function(){this.rectangles.push(_(this.rectangles[this.rectangles.length-1]))}}]),e}(),E=function(){function e(t,i,n,r){Object(m["a"])(this,e),Object(S["a"])(this,"id",void 0),Object(S["a"])(this,"scenes",[new L]),Object(S["a"])(this,"shaderSourceVars",void 0),this.id=t,this.shaderSourceVars={LIGHT_COUNT:i,CIRCLE_COUNT:n,RECTANGLE_COUNT:r};for(var o=1;o<i;o++)this.lastScene().addLight();for(var s=1;s<n;s++)this.lastScene().addCircle();for(var a=1;a<r;a++)this.lastScene().addRectangle()}return Object(y["a"])(e,[{key:"sceneDurations",value:function(){return this.scenes.map((function(e){return e.duration}))}},{key:"duration",value:function(){return this.sceneDurations().reduce((function(e,t){return e+t}),0)}},{key:"lastScene",value:function(){return this.scenes[this.scenes.length-1]}},{key:"addScene",value:function(){return this.scenes.push(this.lastScene().clone()),this.lastScene()}},{key:"currentScene",value:function(e){var t=this.sceneDurations(),i=this.scenes.length;e%=this.duration();var n=0,r=-1;while(n<e)r++,n+=t[r],r%=i;var o=this.scenes[r],s=r+1===i?this.scenes[0]:this.scenes[r+1],a=(e-n+o.duration)/o.duration;return o.interpolate(s,a)}}]),e}();function U(){var e=new E("Rectangle Movie",2,1,9),t=e.lastScene(),i=2;t.lights[0].position=[1,1],t.lights[0].color=[i,0,i],t.lights[1].position=[-1,0],t.lights[1].color=[0,0,0],t.circles[0].radius=0;for(var n=.4,r=.2,o=3*n-r,s=0;s<9;s++){var a=s%3,c=~~(s/3);t.rectangles[s].width=0,t.rectangles[s].height=0,t.rectangles[s].position[0]=n*a-n,t.rectangles[s].position[1]=n*c-n}t.rectangles[4].width=o,t.rectangles[4].height=o,t=e.addScene(),t.lights[0].position[1]=-1,t=e.addScene(),t.lights[0].position[0]=-1,t.rectangles[1].width=o,t.rectangles[1].height=r,t.rectangles[7].width=o,t.rectangles[7].height=r,t=e.addScene(),t.lights[0].position[1]=0,t=e.addScene(),t.rectangles[4].height=r,t=e.addScene(),t.lights[0].color=[i,0,0],t.lights[1].color=[0,0,i],t=e.addScene(),t.lights[0].position[1]=n/4,t.lights[1].position[1]=-n/4,t=e.addScene(),t.lights[0].position[1]=n/2,t.lights[1].position[1]=-n/2,t=e.addScene(),t.lights[0].position[0]=1,t=e.addScene(),t.lights[1].position[0]=-1,t=e.addScene(),t.lights[1].position[0]=1,t.lights[1].position[0]=-1;var l=n/2;t=e.addScene(),t.lights[0].position[0]=l,t.lights[1].position[0]=-l;for(var h=0,d=[0,2,3,5,6,8];h<d.length;h++){var g=d[h];t.rectangles[g].width=r,t.rectangles[g].height=r}t=e.addScene(),t.duration=3;for(var u=0,f=[1,4,7];u<f.length;u++){var p=f[u];t.rectangles[p].width=r,t.rectangles[p].height=r}t=e.addScene(),t.rectangles[4].angle=3*Math.PI,t.duration=.5,t=e.addScene(),t.lights[0].position[1]=-l,t.lights[1].position[1]=l,t=e.addScene(),t.lights[0].position[0]=-l,t.lights[1].position[0]=l,t.duration=1,t=e.addScene(),t.lights[0].position[1]=1,t.lights[1].position[1]=-1,t=e.addScene(),t.lights[0].position[1]=-1,t.lights[1].position[1]=1,t=e.addScene(),t.lights[0].position[1]=l,t.lights[1].position[1]=-l,t=e.addScene(),t.lights[0].position[1]=1,t.lights[1].position[1]=1,t.duration=.5,t=e.addScene(),t.lights[0].position[0]=-l/2,t.lights[1].position[0]=l/2,t=e.addScene(),t.lights[0].position[0]=0,t.lights[1].position[0]=0,t.duration=1,t.rectangles[4].width=o,t.rectangles[4].height=o,t=e.addScene(),t.lights[0].color=[2,0,2],t.lights[1].color=[0,0,0];for(var v=0,m=[0,1,2,3,5,6,7,8];v<m.length;v++){var y=m[v];t.rectangles[y].width=0,t.rectangles[y].height=0}return t.duration=2,e}function P(){var e=new E("Circle Movie",4,9,1),t=e.lastScene();return t.rectangles[0].width=0,t.rectangles[0].height=0,t.rectangles[0].position=[-10,0],t.addCircle(),t.lights[0].position=[-2.5,2.5],t.lights[0].color=[0,0,0],t.lights[1].position=[0,0],t.lights[2].position=[0,0],t.lights[3].position=[0,0],t.lights[1].color=[0,0,0],t.lights[2].color=[0,0,0],t.lights[3].color=[0,0,0],t=e.addScene(),t.lights[0].color=[2,2,2],t.duration=2,t=e.addScene(),t=e.addScene(),t.lights[0].position=[-.5,.5],t.duration=.5,t=e.addScene(),t=e.addScene(),t.lights[0].position=[.5,.5],t.lights[0].color=[2,0,0],t=e.addScene(),t.lights[0].position=[.5,-.5],t.lights[0].color=[1,1,0],t=e.addScene(),t.lights[0].position=[-.5,-.5],t.lights[0].color=[0,2,0],t=e.addScene(),t.lights[0].position=[-.5,.5],t.lights[0].color=[0,0,2],t=e.addScene(),t.lights[0].color=[2,1,3],t.duration=2,t=e.addScene(),t.circles[0].position=[-1,-1],t.circles[1].position=[1,1],t.circles[2].position=[1,-1],t.circles[3].position=[1,-1],t.circles[4].position=[1,-1],t.circles[5].position=[1,-1],t.circles[6].position=[1,-1],t.circles[7].position=[1,-1],t.circles[8].position=[1,-1],t.lights[0].position=[0,0],t=e.addScene(),t.circles[0].radius=.4,t.circles[1].radius=.5,t.lights[0].color=[9,4,8],t.circles[3].position=[1,0],t.circles[4].position=[0,-1],t=e.addScene(),t.circles[0].radius=.2,t.circles[1].radius=.2,t.circles[3].radius=.15,t.circles[4].radius=.15,t=e.addScene(),t.lights[0].color=[1,1,4],t=e.addScene(),t.lights[1].color=[9,4,8],t=e.addScene(),t.lights[1].position=[0,1.8],t.duration=1,t=e.addScene(),t.lights[1].position=[1.8,1.8],t=e.addScene(),t.lights[1].position=[1.8,-1.8],t=e.addScene(),t.lights[1].position=[-1.8,-1.8],t=e.addScene(),t.lights[1].position=[-1.8,0],t=e.addScene(),t.lights[1].position=[0,0],t=e.addScene(),t.circles[0].radius=.1,t.circles[1].radius=.1,t.circles[2].radius=.1,t.circles[3].radius=.1,t.circles[4].radius=.1,t=e.addScene(),t.circles[5].position=[1,.5],t.circles[6].position=[1,-.5],t.circles[7].position=[.5,-1],t.circles[8].position=[-.5,-1],t=e.addScene(),t.lights[0].color=[0,0,0],t.lights[1].color=[0,0,0],t.lights[2].color=[0,0,0],t.lights[3].color=[0,0,0],t=e.addScene(),t.lights[0].position=[1.8,.7],t.lights[1].position=[1.8,-.7],t.lights[2].position=[.7,-1.8],t.lights[3].position=[-.7,-1.8],t.duration=.5,t=e.addScene(),t.lights[0].color=[0,2,0],t=e.addScene(),t.lights[0].color=[0,0,0],t.lights[1].color=[0,2,0],t=e.addScene(),t.lights[1].color=[0,0,0],t.lights[2].color=[0,2,0],t=e.addScene(),t.lights[2].color=[0,0,0],t.lights[3].color=[0,2,0],t=e.addScene(),t.lights[3].color=[0,0,0],t=e.addScene(),t.lights[0].color=[0,2,0],t.lights[1].color=[0,2,0],t.lights[2].color=[0,2,0],t.lights[3].color=[0,2,0],t.duration=3,t=e.addScene(),t.lights[0].position=[1.8,-1.8],t.lights[1].position=[1.8,-1.8],t.lights[2].position=[1.8,-1.8],t.lights[3].position=[1.8,-1.8],t=e.addScene(),t.lights[0].position=[5,-5],t.lights[1].position=[5,-5],t.lights[2].position=[5,-5],t.lights[3].position=[5,-5],t=e.addScene(),t.duration=1,t.lights[0].position=[-2.5,2.5],t.lights[1].position=[-2.5,2.5],t.lights[2].position=[-2.5,2.5],t.lights[3].position=[-2.5,2.5],t.lights[0].color=[0,0,0],t.lights[1].color=[0,0,0],t.lights[2].color=[0,0,0],t.lights[3].color=[0,0,0],e}var j={name:"Home",data:function(){return{frameId:null,startTime:0,raytracer:null,movies:[P(),U()]}},watch:{$route:function(e,t){this.playMovie(this.movies[this.id||0])}},props:{id:Number},methods:{playMovie:function(e){var t=this;null!==this.frameId&&cancelAnimationFrame(this.frameId),this.startTime=null;var i=document.querySelector("#glCanvas"),n=i.getContext("webgl");null===n&&alert("Unable to initialize WebGL. Your browser or machine may not support it."),this.raytracer=new R(n,e.shaderSourceVars);var r=function i(n){n*=.001,null===t.startTime&&(t.startTime=n);var r=1e-4+n-t.startTime;t.raytracer.drawScene(e.currentScene(r)),t.frameId=requestAnimationFrame(i)};this.frameId=requestAnimationFrame(r)}}},k=j,A=(i("21bb"),Object(s["a"])(k,u,f,!1,null,null,null)),x=A.exports;n["a"].use(g["a"]);var I=[{path:"/",redirect:"/movie/0",name:"Home",component:x},{path:"/movie/:id",name:"Movie",component:x,props:function(e){var t=Object(d["a"])({},e.params);return t.id=+t.id,t}},{path:"/about",name:"About",component:function(){return i.e("about").then(i.bind(null,"f820"))}}],N=new g["a"]({mode:"history",base:"/infogr-raytracer-webgl/",routes:I}),M=N,F=i("2f62");n["a"].use(F["a"]);var G=new F["a"].Store({state:{},mutations:{},actions:{},modules:{}});n["a"].config.productionTip=!1,new n["a"]({router:M,store:G,render:function(e){return e(l)}}).$mount("#app")},"5c0b":function(e,t,i){"use strict";var n=i("9c0c"),r=i.n(n);r.a},"9c0c":function(e,t,i){}});
//# sourceMappingURL=app.36898f73.js.map